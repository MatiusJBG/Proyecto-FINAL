#!/usr/bin/env python3
"""
Script para crear datos de prueba necesarios para las evaluaciones
"""

import requests
import json
from datetime import datetime

# Configuraci√≥n
BASE_URL = 'http://localhost:5000/api'
TEACHER_ID = 1
COURSE_ID = 8  # ID del curso "Visual"

def print_section(title):
    """Imprime una secci√≥n con formato"""
    print(f"\n{'='*60}")
    print(f"  {title}")
    print(f"{'='*60}")

def print_result(success, message):
    """Imprime el resultado de una operaci√≥n"""
    status = "‚úÖ" if success else "‚ùå"
    print(f"{status} {message}")

def crear_modulo_prueba():
    """Crea un m√≥dulo de prueba"""
    print_section("CREANDO M√ìDULO DE PRUEBA")
    
    modulo_data = {
        "nombre": "M√≥dulo de Prueba para Evaluaciones",
        "descripcion": "M√≥dulo creado para probar el sistema de evaluaciones",
        "duracion_estimada": 120
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/cursos/{COURSE_ID}/modulos",
            json=modulo_data,
            headers={'Content-Type': 'application/json'}
        )
        
        if response.status_code == 201:
            result = response.json()
            modulo_id = result['modulo']['ID_Modulo']
            print_result(True, f"M√≥dulo creado: {modulo_data['nombre']} (ID: {modulo_id})")
            return modulo_id
        else:
            print_result(False, f"Error creando m√≥dulo: {response.status_code} - {response.text}")
            return None
    except Exception as e:
        print_result(False, f"Error: {str(e)}")
        return None

def crear_leccion_prueba(modulo_id):
    """Crea una lecci√≥n de prueba"""
    print_section("CREANDO LECCI√ìN DE PRUEBA")
    
    leccion_data = {
        "nombre": "Lecci√≥n de Prueba para Evaluaciones",
        "descripcion": "Lecci√≥n creada para probar el sistema de evaluaciones",
        "contenido": "Este es el contenido de la lecci√≥n de prueba.",
        "duracion_estimada": 45,
        "es_obligatoria": True
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/modulos/{modulo_id}/lecciones",
            json=leccion_data,
            headers={'Content-Type': 'application/json'}
        )
        
        if response.status_code == 201:
            result = response.json()
            leccion_id = result['leccion']['ID_Leccion']
            print_result(True, f"Lecci√≥n creada: {leccion_data['nombre']} (ID: {leccion_id})")
            return leccion_id
        else:
            print_result(False, f"Error creando lecci√≥n: {response.status_code} - {response.text}")
            return None
    except Exception as e:
        print_result(False, f"Error: {str(e)}")
        return None

def crear_evaluacion_prueba(leccion_id):
    """Crea una evaluaci√≥n de prueba"""
    print_section("CREANDO EVALUACI√ìN DE PRUEBA")
    
    evaluacion_data = {
        "nombre": "Evaluaci√≥n de Prueba",
        "descripcion": "Evaluaci√≥n creada para probar el sistema",
        "puntaje_aprobacion": 70.0,
        "max_intentos": 3
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/lecciones/{leccion_id}/evaluaciones",
            json=evaluacion_data,
            headers={'Content-Type': 'application/json'}
        )
        
        if response.status_code == 201:
            result = response.json()
            evaluacion_id = result['evaluacion']['ID_Evaluacion']
            print_result(True, f"Evaluaci√≥n creada: {evaluacion_data['nombre']} (ID: {evaluacion_id})")
            return evaluacion_id
        else:
            print_result(False, f"Error creando evaluaci√≥n: {response.status_code} - {response.text}")
            return None
    except Exception as e:
        print_result(False, f"Error: {str(e)}")
        return None

def verificar_datos_creados():
    """Verifica que los datos se crearon correctamente"""
    print_section("VERIFICANDO DATOS CREADOS")
    
    try:
        # Verificar m√≥dulos
        response = requests.get(f"{BASE_URL}/cursos/{COURSE_ID}/modulos")
        if response.status_code == 200:
            modulos = response.json()
            print_result(True, f"Encontrados {len(modulos)} m√≥dulos")
            
            if modulos:
                modulo = modulos[0]
                print(f"   üìö M√≥dulo: {modulo['Nombre']}")
                
                if modulo.get('lecciones'):
                    leccion = modulo['lecciones'][0]
                    print(f"   üìñ Lecci√≥n: {leccion['Nombre']}")
                    
                    if leccion.get('evaluaciones'):
                        evaluacion = leccion['evaluaciones'][0]
                        print(f"   üìù Evaluaci√≥n: {evaluacion['Nombre']}")
                        print_result(True, "Todos los datos creados correctamente")
                        return True
                    else:
                        print_result(False, "No se encontraron evaluaciones")
                        return False
                else:
                    print_result(False, "No se encontraron lecciones")
                    return False
            else:
                print_result(False, "No se encontraron m√≥dulos")
                return False
        else:
            print_result(False, f"Error verificando datos: {response.status_code}")
            return False
    except Exception as e:
        print_result(False, f"Error: {str(e)}")
        return False

def main():
    """Funci√≥n principal"""
    print("üöÄ CREANDO DATOS DE PRUEBA PARA EVALUACIONES")
    print(f"üìÖ Fecha y hora: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # Crear m√≥dulo
    modulo_id = crear_modulo_prueba()
    if not modulo_id:
        print("\n‚ùå No se pudo crear el m√≥dulo. Abortando.")
        return
    
    # Crear lecci√≥n
    leccion_id = crear_leccion_prueba(modulo_id)
    if not leccion_id:
        print("\n‚ùå No se pudo crear la lecci√≥n. Abortando.")
        return
    
    # Crear evaluaci√≥n
    evaluacion_id = crear_evaluacion_prueba(leccion_id)
    if not evaluacion_id:
        print("\n‚ùå No se pudo crear la evaluaci√≥n. Abortando.")
        return
    
    # Verificar que todo se cre√≥ correctamente
    verificar_datos_creados()
    
    print_section("RESUMEN")
    print("‚úÖ Datos de prueba creados exitosamente")
    print(f"üìã Datos creados:")
    print(f"   - M√≥dulo ID: {modulo_id}")
    print(f"   - Lecci√≥n ID: {leccion_id}")
    print(f"   - Evaluaci√≥n ID: {evaluacion_id}")
    print("\nüéâ Ahora puedes ejecutar las pruebas de evaluaciones!")

if __name__ == "__main__":
    main() 